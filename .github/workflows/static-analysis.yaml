name: Static Analysis Pipeline

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write
  security-events: write  # Ensure the action can upload SARIF results    

jobs:

  tflint:
    runs-on: ubuntu-latest
    needs: set_commit_flags

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Cache TFLint plugin directory
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Initialize TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint and generate SARIF report
        run: |
          tflint --chdir=infra/ --recursive > results.txt
        continue-on-error: true

      - name: Add commit comment
        run: |
          file_content=$(cat esults.txt)
          # Escape markdown special characters without adding backticks
          escaped_content=$(echo "$file_content" | sed 's/\\/\\\\/g; s/\*/\\*/g; s/_/\\_/g; s/{/\\{/g; s/}/\\}/g; s/\[/\\[/g; s/\]/\\]/g; s/(/\\(/g; s/)/\\)/g; s/#/\\#/g; s/+/\\+/g; s/-/\\-/g; s/!/\\!/g')
          jq -nc --arg body "$escaped_content" '{"body": $body}' | \
          curl -sL -X POST -d @- \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/comments"
            
  static_analysis_Checkov:
    name: 'Checkov Policies'
    runs-on: ubuntu-latest
    needs: tflint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Checkov PRISMA Policies
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          config_file: aws/CKV_LIST.yaml
          output_format: csv
          output_file_path: .
        continue-on-error: true

      - name: Run Checkov CUSTOM Policies
        id: checkov_custom
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          external_checks_dirs: aws/custom_rules
          config_file: aws/CKV_CUSTOM_LIST.yaml
          output_format: csv
          output_file_path: .
        continue-on-error: true

      - name: Run Checkov GREEN IT Policies
        id: checkov_greenit
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          external_checks_dirs: aws/custom_rules
          config_file: aws/CKV_GREEN_LIST.yaml
          output_format: csv
          output_file_path: .
        continue-on-error: true

      - name: Upload Checkov Reports
        uses: actions/upload-artifact@v3
        with:
          name: all-reports
          path: |
            *.csv
            failed_*.txt

      - name: Run Python Script
        run: |
          python3 .github/staticResults.py  # Ensure your script is named script.py and located in the root directory
      
      - name: Add commit comment
        run: |
          file_content=$(cat failed_CKV_Detailed.txt)
          # Escape markdown special characters without adding backticks
          escaped_content=$(echo "$file_content" | sed 's/\\/\\\\/g; s/\*/\\*/g; s/_/\\_/g; s/{/\\{/g; s/}/\\}/g; s/\[/\\[/g; s/\]/\\]/g; s/(/\\(/g; s/)/\\)/g; s/#/\\#/g; s/+/\\+/g; s/-/\\-/g; s/!/\\!/g')
          jq -nc --arg body "$escaped_content" '{"body": $body}' | \
          curl -sL -X POST -d @- \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/comments"

  tfsec:
    name: 'Tfsec Analysis'
    runs-on: ubuntu-latest
    needs: tflint  # Ensures Tfsec runs after TFLint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: tfsec
        uses: tfsec/tfsec-sarif-action@main
        with:
          sarif_file: tfsec.sarif         

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif


      
  



