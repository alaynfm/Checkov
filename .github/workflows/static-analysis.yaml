#https://spacelift.io/blog/infrastructure-as-code-with-github-actions

name: Static Analysis Pipeline

on:
  push:
    branches-ignore:
      - main

permissions:
  contents: write     

jobs:
  set_commit_flags:
    name: 'Set Commit Flags'
    runs-on: ubuntu-latest

    outputs:
      should_run: ${{ steps.check_commit_message.outputs.should_run }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check Commit Message
        id: check_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit Message: $COMMIT_MESSAGE"
          if echo "$COMMIT_MESSAGE" | grep -iq "si ci"; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  tflint:
    runs-on: ubuntu-latest
    needs: set_commit_flags

    steps:
    - uses: actions/checkout@v4
      name: Checkout source code

    - uses: actions/cache@v4
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v4
      name: Setup TFLint
      with:
        tflint_version: v0.52.0

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      run: tflint -f compact --chdir=infra/ --recursive

  static_analysis_Checkov:
    name: 'Checkov Policies'
    runs-on: ubuntu-latest
    needs: tflint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Checkov PRISMA Policies
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          config_file: aws/CKV_LIST.yaml
          output_format: csv
          output_file_path: .
        continue-on-error: true

      - name: Run Checkov CUSTOM Policies
        id: checkov_custom
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          external_checks_dirs: aws/custom_rules
          config_file: aws/CKV_CUSTOM_LIST.yaml
          output_format: csv
          output_file_path: .
        continue-on-error: true

      - name: Run Checkov GREEN IT Policies
        id: checkov_greenit
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          external_checks_dirs: aws/custom_rules
          config_file: aws/CKV_GREEN_LIST.yaml
          output_format: csv
          output_file_path: .
        continue-on-error: true

      - name: Upload Checkov Reports
        uses: actions/upload-artifact@v3
        with:
          name: all-reports
          path: |
            *.csv
            failed_*.txt

  results:
    name: 'Checkov Policies'
    runs-on: ubuntu-latest
    needs: static_analysis_Checkov
    steps: 

      - name: Run Python Script
        run: |
          python3 .github/staticResults.py  # Ensure your script is named script.py and located in the root directory
      
      - name: Add commit comment
        run: |
          file_content=$(cat failed_CKV_Detailed.txt)
          # Escape markdown special characters without adding backticks
          escaped_content=$(echo "$file_content" | sed 's/\\/\\\\/g; s/\*/\\*/g; s/_/\\_/g; s/{/\\{/g; s/}/\\}/g; s/\[/\\[/g; s/\]/\\]/g; s/(/\\(/g; s/)/\\)/g; s/#/\\#/g; s/+/\\+/g; s/-/\\-/g; s/!/\\!/g')
          jq -nc --arg body "$escaped_content" '{"body": $body}' | \
          curl -sL -X POST -d @- \
            -H "Content-Type: application/json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/comments"

      
  



